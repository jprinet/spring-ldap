apply from: JAVA_SCRIPT
apply from: RELEASE_CHECKS_SCRIPT
apply from: SPRING_SNAPSHOT_TEST_SCRIPT
apply plugin: 'spring-io'
apply from: "${GRADLE_SCRIPT_DIR}/artifactory.gradle"
apply from: "${GRADLE_SCRIPT_DIR}/ossrh.gradle"
apply from: "${GRADLE_SCRIPT_DIR}/deploy-artifacts.gradle"

ext.springIoVersion = project.hasProperty('platformVersion') ? platformVersion : 'Athens-RELEASE'

configurations {
    jacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo
}

dependencies {
    jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.7.1.201405082137", classifier: "runtime"
    dependencyManagement {
        springIoTestRuntime {
            imports {
                mavenBom("io.spring.platform:platform-bom}") {
                    bomProperties([
                        'mockito.version': '1.10.19'
                    ])
                }
            }
        }
    }
}

test {
    jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=org.springframework.*"
}

jar {
    manifest.attributes["Created-By"] =
        "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
    manifest.attributes["Implementation-Title"] = project.name
    manifest.attributes["Implementation-Version"] = project.version

    from("${rootProject.projectDir}") {
        include "license.txt"
        include "notice.txt"
        into "META-INF"
        expand(copyright: new Date().format("yyyy"), version: project.version)
    }
}

javadoc {
    description = "Generates project-level javadoc for use in -javadoc jar"

    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.author = true
    options.header = project.name
    options.links(project.ext.javadocLinks)

    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message
}

task sourcesJar(type: Jar, dependsOn:classes) {
    description = "Generates the -sources.jar"

    classifier = "sources"
    from sourceSets.main.allJava.srcDirs
    include "**/*.java", "**/*.aj"
}
assemble.dependsOn sourcesJar

task javadocJar(type: Jar) {
    description = "Generates the -javadoc.jar"

    classifier = "javadoc"
    from javadoc
}
assemble.dependsOn javadocJar

artifacts {
    archives sourcesJar
    archives javadocJar
}
